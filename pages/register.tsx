import axios, { AxiosResponse } from 'axios';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useState } from 'react';

type Props = {};

const RegisterPage = (props: Props) => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const router = useRouter();

  const handleRegisterInfoChange = (event: React.FormEvent<HTMLInputElement>) => {
    const id = event.currentTarget?.id;
    const value = event.currentTarget?.value;

    if (id === 'inputName') {
      setName(value);
    } else if (id === 'inputEmail') {
      setEmail(value);
    } else if (id === 'inputPassword') {
      setPassword(value);
    }
  };

  const handleRegisterClick = async () => {
    axios
      .post('/api/register', { email, password, name })
      .then(() => {
        router.push('/chat');
      })
      .catch((error) => {
        if (error.response.data.code === 'auth/email-already-in-use') {
          setError('Oops there is already an existing account with that email. Try logging in?');
        } else {
          setError('Oops there was a server error while processing your request.');
        }
      });
  };

  return (
    <>
      <Head>
        <title>Ask Tim Ferris - Chat</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 className="text-5xl">Register</h1>
        <input type="text" placeholder="Name" id="inputName" onChange={handleRegisterInfoChange} />
        <input
          type="text"
          placeholder="Email"
          id="inputEmail"
          onChange={handleRegisterInfoChange}
        />
        <input
          type="password"
          placeholder="Password"
          id="inputPassword"
          onChange={handleRegisterInfoChange}
        />
        <button onClick={handleRegisterClick}>Register</button>
        {error ? <p>{error}</p> : null}
      </main>
    </>
  );
};

export default RegisterPage;
